
function createImageBlob() {
    // Base64-encoded 50x50 PNG of the WebKit logo.
    const bytesAsString = atob("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");
    const bytesAsArray = new Array(bytesAsString.length);
    for (let i = 0; i < bytesAsString.length; i++)
        bytesAsArray[i] = bytesAsString.charCodeAt(i);
    return new Blob([new Uint8Array(bytesAsArray)], { type : "image/png" });
}

function createHTMLBlob() {
    const markup = "<strong style='color: red;'>Hello</strong>&nbsp;<em><u style='font-size: 24px;'>world</u></em>";
    const bytesAsArray = new Array(markup.length);
    for (let i = 0; i < markup.length; i++)
        bytesAsArray[i] = markup.charCodeAt(i);
    return new Blob([new Uint8Array(bytesAsArray)], { type : "text/html" });
}

function createTextBlob() {
    const plainText = "The quick brown fox jumped over the lazy dog.";
    const bytesAsArray = new Array(plainText.length);
    for (let i = 0; i < plainText.length; i++)
        bytesAsArray[i] = plainText.charCodeAt(i);
    return new Blob([new Uint8Array(bytesAsArray)], { type : "text/plain" });
}

function wrapInPromise(promisedData, delayInMS = 0) {
    return new Promise(resolve => {
        if (delayInMS > 0)
            setTimeout(() => resolve(promisedData), delayInMS);
        else
            resolve(promisedData);
    });
}

function nextIdentifier() {
    if (!window.__monotonicallyIncreasingIdentifier)
        __monotonicallyIncreasingIdentifier = 0;
    return `item-${++__monotonicallyIncreasingIdentifier}`;
}

function itemMap() {
    if (!window.__itemMap)
        __itemMap = new Map;
    return __itemMap;
}

function setItem(identifier, item) {
    if (item)
        itemMap().set(identifier, item);
    else
        itemMap().delete(identifier);
}

function getItem(identifier) {
    return itemMap().get(identifier);
}
